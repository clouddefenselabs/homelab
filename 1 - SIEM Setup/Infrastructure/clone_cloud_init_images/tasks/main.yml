#This will clone cloud-init vms and create virtual machines

---
- name: Install required packages
  apt:
    name:
      - python3-pip
      - python3-dev
      - build-essential
      - libguestfs-tools
      - virtualenv
      - python3-proxmoxer
      - python3-requests

- name: Clone Cloud-Init Image
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_user}}"
    api_password: "{{ proxmox_password }}"
    api_host: "{{ proxmox_host }}"
    clone: ubuntu-2204-cloud
    name: "{{ vm_name }}"
    node: "{{ proxmox_node }}"
    storage: "{{ proxmox_storage }}" #Change to match storage name
    format: qcow2
    timeout: 500
    ide:
      ide2: 'local-zfs:vm-9999-cloudinit'
    net:
      net0: 'virtio,bridge=vmbr0,tag=10'
    ipconfig:
      ipconfig0: "{{ ip_address }}"
    newid: "{{ vm_new_id }}"
    sshkeys: "{{ ssh_key }}"
    searchdomains: 'home.initcyber.com' #Change this to match your domain

- name: Update VM configuration
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_password }}"
    api_host: "{{ proxmox_host }}"
    name: "{{ vm_name }}"
    node: "{{ proxmox_node }}"
    cores: "{{ cpu }}"
    memory: "{{ mem }}"
    scsi: 
      scsi0: '{{ proxmox_storage }}:+50G'
    update: true

# I literally can't find an ansible way to do this outside of shell
- name: Grow Disk
  ansible.builtin.shell:
    cmd: qm resize "{{ vm_new_id }}" scsi0 +50G


- name: Start VM
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_password }}"
    api_host: "{{ proxmox_host }}"
    name: "{{ vm_name }}"
    node: "{{ proxmox_node }}"
    state: started
  

